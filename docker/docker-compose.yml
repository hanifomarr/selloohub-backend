name: '${COMPOSE_PROJECT_NAME:-project}'

services:
  mysql:
    image: mysql:8.0.39 # swap back to 8.4 later
    container_name: '${COMPOSE_PROJECT_NAME:-project}-mysql'
    platform: linux/arm64/v8
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '3307:3306' # expose to host; remove in prod if app is in same network
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test:
        [
          'CMD',
          'mysqladmin',
          'ping',
          '-h',
          'localhost',
          '-p${MYSQL_ROOT_PASSWORD}',
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  mongo:
    image: mongo:7
    container_name: '${COMPOSE_PROJECT_NAME:-project}-mongo'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - '27017:27017' # expose to host; remove in prod if app is in same network
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test:
        [
          'CMD',
          'mongosh',
          '--eval',
          "db.adminCommand('ping')",
          '-u',
          '${MONGO_INITDB_ROOT_USERNAME}',
          '-p',
          '${MONGO_INITDB_ROOT_PASSWORD}',
          '--authenticationDatabase',
          'admin',
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  # ----- Optional: DB GUIs (dev-only) -----
  adminer:
    image: adminer:latest
    container_name: '${COMPOSE_PROJECT_NAME:-your_project}-adminer'
    restart: unless-stopped
    ports: ['8080:8080'] # http://localhost:8080
    depends_on: { mysql: { condition: service_healthy } }

  mongo_express:
    image: mongo-express:1.0.2-20
    container_name: '${COMPOSE_PROJECT_NAME:-your_project}-mongo-express'
    restart: unless-stopped
    ports: ['8081:8081'] # http://localhost:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: me_user
      ME_CONFIG_BASICAUTH_PASSWORD: me_pass
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/
    depends_on: { mongo: { condition: service_healthy } }

# Persisted volumes (data survives restarts)
volumes:
  mysql_data:
  mongo_data:
